// 使用顶点着色器的输出myColor作为输入，片段着色器需要生成一个输出的vec4颜色变量

// 着色器传递数据，需要在发送方中声明一个输出，并在接收方中声明一个类似的输入，当类型和命名相同时，OpenGL就会把两个变量链接到一起，使得着色器之间能传递数据（这是在链接着色器程序对象时完成的）

// shader_f.txt由shader_v.txt决定输出的颜色的示例

#version 330 core
in vec3 myColor;						// 输入为链接的上一个顶点着色器的输出，（3维）颜色变量
out vec4 FragColor;						// 输出为4个浮点值构成的一个（4维）向量

void main()
{

	FragColor = vec4(myColor, 1.0f);	// 核心函数（颜色信息赋值）

}